# Bot config and secrets

# Bot identity
id:
  # Display name
  name: My Bot
  # Every bot gets its own GUID. Run uuidgen to get a fresh one.
  guid: fed828a8-64c8-4f46-a15d-93973724614c

  # Optional: SQS queue name (optional; used for image generation and social media posting)
  # sqs_queue: example
  # aws_region: us-west-2

# Prompt completion options
completion:
  engine: openai
  api_key: sk-your-api_key-goes-here
  model: text-davinci-003
  minimum_quality_score: -2.0
  temperature: 0.99
  # spacy_model: "en_core_web_lg"

# Sentiment analysis engine
sentiment:
  engine: "flair"
  model: "en-sentiment"
  # engine: "spacy"
  # model: "en_core_web_lg"

# Chat modules. Enable one or more of these.
chat:
  slack:
    # From Slack management, Apps > Basic Information > App-Level Tokens
    app_token: xapp-your-app-token-here
    # From OAuth & Permission > Bot User OAuth Token
    bot_token: xoxb-your-bot-token-here

  # Discord chat module
  # discord:
  #   token: your-discord-token-here
  #   webhook: https://discord.com/api/webhooks/path-to-your-webhook

  # Mastodon support. Posts generated images to Mastodon. Optional.
  # Run masto-login.py to authenticate and generate the MASTODON_SECRET file.
  # mastodon:
  #   instance: "https://mastodon.social/"
  #   secret: "/path/to/your/user.secret"
  #   toot_length: 500

# Required: At least one long-term memory service must be defined.
# Currently only Elasticsearch is supported.
memory:
  elastic:
    url: https://your-elasticsearch-instance.es.us-west-2.aws.found.io:443
    user: elastic-bot-user
    key: elastic-bot-password
    index_prefix: persyn

# Required: Personality server (interact-server.py)
interact:
  url: http://localhost:8003

  # Optional: Dream image generation server (dreams.py)
  # dreams:
  #   url: http://localhost:8001
  #   gpus:
  #     # CUDA number and a name for each local GPU to use for image generation
  #     1: Nvidia 2080

  # Image upload SCP destination and URL. Only required if generating images.
  # upload:
  #   url_base: https://server.example.com/images/
  #   dest_path: user@server.example.com:htdocs/images/
  #   opts:

  # Optional: Stable Diffusion image server (sdd.py)
  # stable_diffusion:
  #   url: http://localhost:8005

  # Optional: Prompt Parrot server for ðŸª„ prompt enhancement (prompt-parrot.py)
  # parrot:
  #   url: http://localhost:8004

  # Optional: CLIP Interrogator server for image recognition (interrogator.py)
  # captions:
  #   url: http://localhost:9090

  # Supported image engines. Only required if generating images.
  # engines:
  #   stylegan2:
  #     models:
  #       - ffhq
  #       - waifu
  #   stable-diffusion:
